name: GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable
      - name: Add wasm target
        run: rustup target add wasm32-unknown-unknown
      - name: Build wasm target
        run: cargo build --release --target wasm32-unknown-unknown
      - name: Install wasm-bindgen-cli
        run: cargo install wasm-bindgen-cli --version ^0.2
      - name: Fetch QR vendor lib
        run: |
          mkdir -p examples/wasm/vendor
          curl -fsSL https://unpkg.com/qrcode-generator@1.4.4/qrcode.js -o examples/wasm/vendor/qrcode.js || \
          curl -fsSL https://cdn.jsdelivr.net/npm/qrcode-generator@1.4.4/qrcode.js -o examples/wasm/vendor/qrcode.js
      - name: Generate wasm bindings
        run: |
          mkdir -p examples/wasm/pkg
          wasm-bindgen --target web --no-typescript \
            --out-dir examples/wasm/pkg \
            --out-name uuid45 \
            target/wasm32-unknown-unknown/release/uuid45.wasm
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: examples/wasm

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
